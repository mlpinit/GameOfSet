<project name="AntJavaProject" default="main" basedir=".">
	<description>
    Implement the popular pattern matching game named Set.
	</description>

	<property name="projectName" value="GameOfSet" />

	<property name="src.dir" location="src" />
	<property name="build.dir" location="bin" />
	<property name="dist.dir" location="dist" />
  <property name="test.src.dir" value="test/src" />
  <property name="test.build.dir" value="test/build" />
	<property name="resources.dir" value="resources" />

  <path id="classpath.test">
    <pathelement location="lib/junit-4.12.jar"/>
    <pathelement location="lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${build.dir}"/>
    <pathelement location="${test.build.dir}"/>
  </path>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build.dir}" />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<!-- Compile the java code from ${src.dir} into ${build.dir} -->
    <javac includeantruntime="false" srcdir="${src.dir}" destdir="${build.dir}"
      debug="true" debuglevel="lines,vars,source"/>
      
	</target>

  <target name="test-compile" depends="compile">
    <mkdir dir="${test.build.dir}"/>
    <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false"
      debug="true" debuglevel="lines,vars,source">
        <classpath refid="classpath.test"/>
    </javac>
  </target>

	<target name="dist" depends="compile" description="package, output to JAR">

		<!-- Create the distribution directory -->
		<mkdir dir="${dist.dir}" />

		<!-- Put everything in ${build} into the {$projectName}-${DSTAMP}.jar file -->
		<jar jarfile="${dist.dir}/${projectName}-${DSTAMP}.jar" basedir="${build.dir}" >
        <manifest>
          <!-- create an executable Jar -->
          <attribute name="Main-Class" value="com.mlpinit.set.MainFrame" />
		    </manifest>

        <fileset dir="${resources.dir}">
          <include name="*.png" />
        </fileset>
		</jar>
	</target>

  <target name="test" depends="test-compile">
    <junit printsummary="on" haltonfailure="yes" fork="true">
        <classpath>
          <path refid="classpath.test"/>
          <pathelement location="${test.build.dir}"/>
        </classpath>
        <formatter type="brief" usefile="false" />
        <batchtest>
            <fileset dir="${test.src.dir}" includes="**/*Test.java" />
        </batchtest>
    </junit>
  </target>

	<target name="clean" description="clean up">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
    <delete dir="${test.build.dir}" />
	</target>

	<!-- Default, run this -->
	<target name="main" depends="clean, compile, dist" />

</project>
